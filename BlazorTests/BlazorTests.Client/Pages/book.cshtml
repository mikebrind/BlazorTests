@using BlazorTests.Shared
@page "/books"
@inject HttpClient http

<h1>Books</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (authors == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <select bind="SelectedAuthorId">
        <option value=@(0)></option>
        @foreach (var author in authors)
        {
            <option value="@author.AuthorId">@author.Name</option>
        }
    </select>
}

@if (SelectedAuthorId != default)
{
    var books = authors.Single(x => x.AuthorId == SelectedAuthorId).Books;

    <select bind="SelectedBookId">
        <option value=@(0)></option>
        @foreach (var book in books)
        {
            <option value="@book.BookId">@book.Title</option>
        }
    </select>

    var selectedBook = books.FirstOrDefault(x => x.BookId == SelectedBookId);
    @if (selectedBook != null)
    {
        <div>
            Title: @selectedBook.Title<br />
            Year published: @selectedBook.YearPublished<br />
            Price: @selectedBook.Price
        </div>
    }
}

@functions {
Author[] authors;

// Track the selected author ID, and when it's written to, reset SelectedBookId
int _selectedAuthorId;
int SelectedAuthorId
{
    get => _selectedAuthorId;
    set
    {
        _selectedAuthorId = value;
        SelectedBookId = default;
    }
}

int SelectedBookId { get; set; }

protected override async Task OnInitAsync()
{
    authors = await http.GetJsonAsync<Author[]>("/api/book");
}
}