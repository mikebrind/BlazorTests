#pragma checksum "C:\Users\MIKE\Documents\Visual Studio 2017\Projects\BlazorTests\BlazorTests.Client\Pages\book.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9212f6808340f9830ffa63681fe39010e1244fdb"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorTests.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using BlazorTests.Client;
    using BlazorTests.Client.Shared;
    using BlazorTests.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/books")]
    public class book : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.OpenElement(0, "h1");
            builder.AddContent(1, "Books");
            builder.CloseElement();
            builder.AddContent(2, "\n\n");
            builder.OpenElement(3, "h1");
            builder.AddAttribute(4, "class", "display-1");
            builder.AddAttribute(5, "onmouseover", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(OnMouseOver));
            builder.AddAttribute(6, "onmouseout", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIMouseEventArgs>(OnMouseOut));
            builder.AddContent(7, inOrOut);
            builder.CloseElement();
            builder.AddContent(8, "\n\n");
#line 9 "C:\Users\MIKE\Documents\Visual Studio 2017\Projects\BlazorTests\BlazorTests.Client\Pages\book.cshtml"
 if (authors == null)
{

#line default
#line hidden
            builder.AddContent(9, "    ");
            builder.OpenElement(10, "p");
            builder.OpenElement(11, "em");
            builder.AddContent(12, "Loading...");
            builder.CloseElement();
            builder.CloseElement();
            builder.AddContent(13, "\n");
#line 12 "C:\Users\MIKE\Documents\Visual Studio 2017\Projects\BlazorTests\BlazorTests.Client\Pages\book.cshtml"
}
else
{

#line default
#line hidden
            builder.AddContent(14, "    ");
            builder.OpenElement(15, "select");
            builder.AddAttribute(16, "id", "authors");
            builder.AddAttribute(17, "onchange", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIChangeEventArgs>(AuthorSelectionChanged));
            builder.AddContent(18, "\n        ");
            builder.OpenElement(19, "option");
            builder.CloseElement();
            builder.AddContent(20, "\n");
#line 17 "C:\Users\MIKE\Documents\Visual Studio 2017\Projects\BlazorTests\BlazorTests.Client\Pages\book.cshtml"
         foreach (var author in authors)
        {

#line default
#line hidden
            builder.AddContent(21, "            ");
            builder.OpenElement(22, "option");
            builder.AddAttribute(23, "value", author.AuthorId);
            builder.AddContent(24, author.Name);
            builder.CloseElement();
            builder.AddContent(25, "\n");
#line 20 "C:\Users\MIKE\Documents\Visual Studio 2017\Projects\BlazorTests\BlazorTests.Client\Pages\book.cshtml"
        }

#line default
#line hidden
            builder.AddContent(26, "    ");
            builder.CloseElement();
            builder.AddContent(27, "\n");
#line 22 "C:\Users\MIKE\Documents\Visual Studio 2017\Projects\BlazorTests\BlazorTests.Client\Pages\book.cshtml"
}

#line default
#line hidden
            builder.AddContent(28, "\n");
#line 24 "C:\Users\MIKE\Documents\Visual Studio 2017\Projects\BlazorTests\BlazorTests.Client\Pages\book.cshtml"
 if(books != null)
{

#line default
#line hidden
            builder.AddContent(29, "    ");
            builder.OpenComponent<BlazorTests.Client.Pages.ChildComponent>(30);
            builder.AddAttribute(31, "BookList", books);
            builder.CloseComponent();
            builder.AddContent(32, " \n");
#line 27 "C:\Users\MIKE\Documents\Visual Studio 2017\Projects\BlazorTests\BlazorTests.Client\Pages\book.cshtml"

}




#line default
#line hidden
#line 42 "C:\Users\MIKE\Documents\Visual Studio 2017\Projects\BlazorTests\BlazorTests.Client\Pages\book.cshtml"
 if(selectedBook != null)
{

#line default
#line hidden
            builder.AddContent(33, "    ");
            builder.OpenElement(34, "div");
            builder.AddContent(35, "\n        Title: ");
            builder.AddContent(36, selectedBook.Title);
            builder.OpenElement(37, "br");
            builder.CloseElement();
            builder.AddContent(38, "\n        Year published: ");
            builder.AddContent(39, selectedBook.YearPublished);
            builder.OpenElement(40, "br");
            builder.CloseElement();
            builder.AddContent(41, "\n        Price: ");
            builder.AddContent(42, selectedBook.Price);
            builder.AddContent(43, "\n    ");
            builder.CloseElement();
            builder.AddContent(44, "\n");
#line 49 "C:\Users\MIKE\Documents\Visual Studio 2017\Projects\BlazorTests\BlazorTests.Client\Pages\book.cshtml"
}

#line default
#line hidden
        }
        #pragma warning restore 1998
#line 52 "C:\Users\MIKE\Documents\Visual Studio 2017\Projects\BlazorTests\BlazorTests.Client\Pages\book.cshtml"
            
    string inOrOut = "OUT";

    void OnMouseOver()
    {
        inOrOut = "IN!";
    }

    void OnMouseOut()
    {
        inOrOut = "OUT";
    }
    Author[] authors;
    Book[] books;
    Book selectedBook;
    ElementRef bookSelect;


    protected override async Task OnInitAsync()
    {
        authors = await http.GetJsonAsync<Author[]>("/api/book");
    }


    void AuthorSelectionChanged(UIChangeEventArgs e)
    {
        books = null;
        if (int.TryParse(e.Value.ToString(), out int id))
        {
            books = authors.First(a => a.AuthorId == id).Books.ToArray();
        }
        bookSelect.ResetSelectedIndex();
    }

    void BookSelectionChanged(UIChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int id))
        {
            selectedBook = books.FirstOrDefault(b => b.BookId == id);
        }
        else
        {
            selectedBook = null;
        }
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
